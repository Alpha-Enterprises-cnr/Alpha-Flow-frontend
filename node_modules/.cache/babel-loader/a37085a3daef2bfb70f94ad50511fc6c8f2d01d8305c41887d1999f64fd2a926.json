{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Folder\\\\my-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Splash from './Splash';\nimport Login from './login';\nimport Dashboard from './Dashboard';\nimport Inbox from './inbox';\nimport Compose from './compose';\nimport MasterCorrespondence from './MasterCorrespondence';\nimport GeneralCorrespondence from './GeneralCorrespondence';\nimport ClientForm from './ClientForm';\nimport JobRegistry from './JobRegistry';\nimport OperationHeadPanel from './OperationHeadPanel';\nimport Systems from './Systems';\nimport Accounts from './Accounts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [showSplash, setShowSplash] = useState(true);\n  const [currentModule, setCurrentModule] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [correspondenceData, setCorrespondenceData] = useState([]);\n  const [operationHeadData, setOperationHeadData] = useState([]);\n  const [systemMessages, setSystemMessages] = useState([]);\n  const [accountsData, setAccountsData] = useState([]);\n  const [systemsToOperationHead, setSystemsToOperationHead] = useState([]);\n  const handleAssignWorkNumber = (index, worknumber) => {\n    setCorrespondenceData(prev => {\n      const updated = [...prev];\n      updated[index] = {\n        ...updated[index],\n        worknumber,\n        status: 'Registered - waiting for survey supporting documents'\n      };\n      setOperationHeadData(old => [...old, updated[index]]);\n      return updated;\n    });\n  };\n  const handleSubmitToSystems = submittedCard => {\n    const {\n      worknumber\n    } = submittedCard;\n    setOperationHeadData(prev => prev.filter(item => item.worknumber !== worknumber));\n    setSystemMessages(prev => {\n      const exists = prev.some(msg => msg.worknumber === worknumber);\n      return exists ? prev : [...prev, {\n        ...submittedCard\n      }];\n    });\n    setCorrespondenceData(prev => prev.map(entry => entry.worknumber === worknumber ? {\n      ...entry,\n      surveySubmitted: true,\n      status: '📸 Work survey supporting documents have been submitted'\n    } : entry));\n    alert(`✅ Work Number ${worknumber} submitted to Systems`);\n  };\n  const handleForwardToAccounts = entry => {\n    setAccountsData(prev => [...prev, entry]);\n    setSystemMessages(prev => prev.filter(msg => msg.worknumber !== entry.worknumber));\n    setCorrespondenceData(prev => prev.map(e => e.worknumber === entry.worknumber ? {\n      ...e,\n      status: '📤 Estimates were sent, waiting for approval'\n    } : e));\n  };\n  const handleApprovalUpdate = (worknumber, statusText) => {\n    setCorrespondenceData(prev => prev.map(entry => entry.worknumber === worknumber ? {\n      ...entry,\n      approved: true,\n      status: 'Approved by Accounts'\n    } : entry));\n    setAccountsData(prev => prev.filter(entry => entry.worknumber !== worknumber));\n    const updated = correspondenceData.find(e => e.worknumber === worknumber);\n    if (updated) {\n      setSystemMessages(prev => [...prev, {\n        ...updated,\n        status: 'Approved by Accounts'\n      }]);\n    }\n  };\n  const handleSendWorkslipToOperationHead = (worknumber, file, entry) => {\n    setSystemMessages(prev => prev.filter(msg => msg.worknumber !== worknumber));\n    setSystemsToOperationHead(prev => [...prev, {\n      ...entry,\n      worknumber,\n      workslip: file,\n      status: '📤 Workslip submitted to Operation Head'\n    }]);\n    setCorrespondenceData(prev => prev.map(e => e.worknumber === worknumber ? {\n      ...e,\n      status: '📤 Workslip submitted to Operation Head'\n    } : e));\n    alert(`✅ Workslip for ${worknumber} sent to Operation Head`);\n  };\n  const handleSurveyUpload = (worknumber, uploadedFiles = []) => {\n    setCorrespondenceData(prev => prev.map(entry => entry.worknumber === worknumber ? {\n      ...entry,\n      surveySubmitted: true,\n      status: '📦 WORK SURVEY SUPPORTING DOCUMENTS HAVE BEEN SUBMITTED'\n    } : entry));\n    if (uploadedFiles.length > 0) {\n      const fileInfo = uploadedFiles.map(file => ({\n        name: file.name,\n        url: `http://localhost:5000/uploads/${file.name}`\n      }));\n      setSystemMessages(prev => [...prev, {\n        sender: 'operationhead@gmail.com',\n        text: `📁 Work survey documents submitted for Work Number ${worknumber}`,\n        file: fileInfo,\n        worknumber\n      }]);\n    }\n  };\n  const handleClientFormSubmit = formData => {\n    setCorrespondenceData(prev => [...prev, {\n      ...formData,\n      approved: false\n    }]);\n    alert('Client form submitted successfully!');\n    setCurrentModule(null);\n  };\n  const handleJobRegistrySubmit = formData => {\n    setCorrespondenceData(prev => [...prev, {\n      ...formData,\n      approved: false\n    }]);\n    alert('Job registry submitted successfully!');\n    setCurrentModule(null);\n  };\n  const handleLogin = email => {\n    setUser({\n      email\n    });\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowSplash(false);\n    }, 2800);\n    return () => clearTimeout(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: showSplash ? /*#__PURE__*/_jsxDEV(Splash, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this) : !user ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this) : currentModule === 'mail' ? /*#__PURE__*/_jsxDEV(Inbox, {\n      user: user,\n      messages: messages,\n      onCompose: () => setCurrentModule('compose'),\n      onBack: () => setCurrentModule(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this) : currentModule === 'compose' ? /*#__PURE__*/_jsxDEV(Compose, {\n      onSend: mail => {\n        setMessages([...messages, mail]);\n        setCurrentModule('mail');\n      },\n      onBack: () => setCurrentModule('mail')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this) : currentModule === 'master' ? /*#__PURE__*/_jsxDEV(MasterCorrespondence, {\n      data: correspondenceData,\n      onBack: () => setCurrentModule(null),\n      onAssignWorkNumber: handleAssignWorkNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this) : currentModule === 'general' ? /*#__PURE__*/_jsxDEV(GeneralCorrespondence, {\n      data: correspondenceData,\n      onBack: () => setCurrentModule(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this) : currentModule === 'form' ? /*#__PURE__*/_jsxDEV(ClientForm, {\n      onSubmit: handleClientFormSubmit,\n      onBack: () => setCurrentModule(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this) : currentModule === 'register' ? /*#__PURE__*/_jsxDEV(JobRegistry, {\n      onSubmit: handleJobRegistrySubmit,\n      onBack: () => setCurrentModule(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this) : currentModule === 'operationHead' ? /*#__PURE__*/_jsxDEV(OperationHeadPanel, {\n      jobData: operationHeadData,\n      currentUser: user === null || user === void 0 ? void 0 : user.email,\n      systemsWork: systemsToOperationHead,\n      onSubmitToSystems: handleSubmitToSystems,\n      onSurveyUpload: handleSurveyUpload,\n      onBack: () => setCurrentModule(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this) : currentModule === 'supervisor' ? /*#__PURE__*/_jsxDEV(Systems, {\n      currentUser: user === null || user === void 0 ? void 0 : user.email,\n      messages: systemMessages,\n      onBack: () => setCurrentModule(null),\n      onSurveyUpload: handleSurveyUpload,\n      onSendWorkslipToOperationHead: handleSendWorkslipToOperationHead,\n      onForwardToAccounts: handleForwardToAccounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this) : currentModule === 'accounts' ? /*#__PURE__*/_jsxDEV(Accounts, {\n      accountData: accountsData,\n      onBack: () => setCurrentModule(null),\n      onApproveStatus: handleApprovalUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {\n      onSelect: setCurrentModule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7BqcP0GbnTdfKD3pUyUHv0jPnH4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Splash","Login","Dashboard","Inbox","Compose","MasterCorrespondence","GeneralCorrespondence","ClientForm","JobRegistry","OperationHeadPanel","Systems","Accounts","jsxDEV","_jsxDEV","App","_s","user","setUser","showSplash","setShowSplash","currentModule","setCurrentModule","messages","setMessages","correspondenceData","setCorrespondenceData","operationHeadData","setOperationHeadData","systemMessages","setSystemMessages","accountsData","setAccountsData","systemsToOperationHead","setSystemsToOperationHead","handleAssignWorkNumber","index","worknumber","prev","updated","status","old","handleSubmitToSystems","submittedCard","filter","item","exists","some","msg","map","entry","surveySubmitted","alert","handleForwardToAccounts","e","handleApprovalUpdate","statusText","approved","find","handleSendWorkslipToOperationHead","file","workslip","handleSurveyUpload","uploadedFiles","length","fileInfo","name","url","sender","text","handleClientFormSubmit","formData","handleJobRegistrySubmit","handleLogin","email","timer","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onCompose","onBack","onSend","mail","data","onAssignWorkNumber","onSubmit","jobData","currentUser","systemsWork","onSubmitToSystems","onSurveyUpload","onSendWorkslipToOperationHead","onForwardToAccounts","accountData","onApproveStatus","onSelect","_c","$RefreshReg$"],"sources":["C:/React Folder/my-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Splash from './Splash';\nimport Login from './login';\nimport Dashboard from './Dashboard';\nimport Inbox from './inbox';\nimport Compose from './compose';\nimport MasterCorrespondence from './MasterCorrespondence';\nimport GeneralCorrespondence from './GeneralCorrespondence';\nimport ClientForm from './ClientForm';\nimport JobRegistry from './JobRegistry';\nimport OperationHeadPanel from './OperationHeadPanel';\nimport Systems from './Systems';\nimport Accounts from './Accounts';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [showSplash, setShowSplash] = useState(true);\n  const [currentModule, setCurrentModule] = useState(null);\n\n  const [messages, setMessages] = useState([]);\n  const [correspondenceData, setCorrespondenceData] = useState([]);\n  const [operationHeadData, setOperationHeadData] = useState([]);\n  const [systemMessages, setSystemMessages] = useState([]);\n  const [accountsData, setAccountsData] = useState([]);\n  const [systemsToOperationHead, setSystemsToOperationHead] = useState([]);\n\n  const handleAssignWorkNumber = (index, worknumber) => {\n    setCorrespondenceData((prev) => {\n      const updated = [...prev];\n      updated[index] = {\n        ...updated[index],\n        worknumber,\n        status: 'Registered - waiting for survey supporting documents',\n      };\n      setOperationHeadData((old) => [...old, updated[index]]);\n      return updated;\n    });\n  };\n\n  const handleSubmitToSystems = (submittedCard) => {\n    const { worknumber } = submittedCard;\n    setOperationHeadData((prev) =>\n      prev.filter((item) => item.worknumber !== worknumber)\n    );\n    setSystemMessages((prev) => {\n      const exists = prev.some((msg) => msg.worknumber === worknumber);\n      return exists ? prev : [...prev, { ...submittedCard }];\n    });\n    setCorrespondenceData((prev) =>\n      prev.map((entry) =>\n        entry.worknumber === worknumber\n          ? {\n              ...entry,\n              surveySubmitted: true,\n              status: '📸 Work survey supporting documents have been submitted',\n            }\n          : entry\n      )\n    );\n    alert(`✅ Work Number ${worknumber} submitted to Systems`);\n  };\n\n  const handleForwardToAccounts = (entry) => {\n    setAccountsData((prev) => [...prev, entry]);\n    setSystemMessages((prev) =>\n      prev.filter((msg) => msg.worknumber !== entry.worknumber)\n    );\n    setCorrespondenceData((prev) =>\n      prev.map((e) =>\n        e.worknumber === entry.worknumber\n          ? {\n              ...e,\n              status: '📤 Estimates were sent, waiting for approval',\n            }\n          : e\n      )\n    );\n  };\n\n  const handleApprovalUpdate = (worknumber, statusText) => {\n    setCorrespondenceData((prev) =>\n      prev.map((entry) =>\n        entry.worknumber === worknumber\n          ? {\n              ...entry,\n              approved: true,\n              status: 'Approved by Accounts',\n            }\n          : entry\n      )\n    );\n    setAccountsData((prev) =>\n      prev.filter((entry) => entry.worknumber !== worknumber)\n    );\n\n    const updated = correspondenceData.find((e) => e.worknumber === worknumber);\n    if (updated) {\n      setSystemMessages((prev) => [...prev, { ...updated, status: 'Approved by Accounts' }]);\n    }\n  };\n\n  const handleSendWorkslipToOperationHead = (worknumber, file, entry) => {\n    setSystemMessages((prev) =>\n      prev.filter((msg) => msg.worknumber !== worknumber)\n    );\n    setSystemsToOperationHead((prev) => [\n      ...prev,\n      { ...entry, worknumber, workslip: file, status: '📤 Workslip submitted to Operation Head' },\n    ]);\n    setCorrespondenceData((prev) =>\n      prev.map((e) =>\n        e.worknumber === worknumber\n          ? {\n              ...e,\n              status: '📤 Workslip submitted to Operation Head',\n            }\n          : e\n      )\n    );\n    alert(`✅ Workslip for ${worknumber} sent to Operation Head`);\n  };\n\n  const handleSurveyUpload = (worknumber, uploadedFiles = []) => {\n    setCorrespondenceData((prev) =>\n      prev.map((entry) =>\n        entry.worknumber === worknumber\n          ? {\n              ...entry,\n              surveySubmitted: true,\n              status: '📦 WORK SURVEY SUPPORTING DOCUMENTS HAVE BEEN SUBMITTED',\n            }\n          : entry\n      )\n    );\n\n    if (uploadedFiles.length > 0) {\n      const fileInfo = uploadedFiles.map((file) => ({\n        name: file.name,\n        url: `http://localhost:5000/uploads/${file.name}`,\n      }));\n\n      setSystemMessages((prev) => [\n        ...prev,\n        {\n          sender: 'operationhead@gmail.com',\n          text: `📁 Work survey documents submitted for Work Number ${worknumber}`,\n          file: fileInfo,\n          worknumber,\n        },\n      ]);\n    }\n  };\n\n  const handleClientFormSubmit = (formData) => {\n    setCorrespondenceData((prev) => [...prev, { ...formData, approved: false }]);\n    alert('Client form submitted successfully!');\n    setCurrentModule(null);\n  };\n\n  const handleJobRegistrySubmit = (formData) => {\n    setCorrespondenceData((prev) => [...prev, { ...formData, approved: false }]);\n    alert('Job registry submitted successfully!');\n    setCurrentModule(null);\n  };\n\n  const handleLogin = (email) => {\n    setUser({ email });\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setShowSplash(false);\n    }, 2800);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {showSplash ? (\n        <Splash />\n      ) : !user ? (\n        <Login onLogin={handleLogin} />\n      ) : currentModule === 'mail' ? (\n        <Inbox\n          user={user}\n          messages={messages}\n          onCompose={() => setCurrentModule('compose')}\n          onBack={() => setCurrentModule(null)}\n        />\n      ) : currentModule === 'compose' ? (\n        <Compose\n          onSend={(mail) => {\n            setMessages([...messages, mail]);\n            setCurrentModule('mail');\n          }}\n          onBack={() => setCurrentModule('mail')}\n        />\n      ) : currentModule === 'master' ? (\n        <MasterCorrespondence\n          data={correspondenceData}\n          onBack={() => setCurrentModule(null)}\n          onAssignWorkNumber={handleAssignWorkNumber}\n        />\n      ) : currentModule === 'general' ? (\n        <GeneralCorrespondence\n          data={correspondenceData}\n          onBack={() => setCurrentModule(null)}\n        />\n      ) : currentModule === 'form' ? (\n        <ClientForm\n          onSubmit={handleClientFormSubmit}\n          onBack={() => setCurrentModule(null)}\n        />\n      ) : currentModule === 'register' ? (\n        <JobRegistry\n          onSubmit={handleJobRegistrySubmit}\n          onBack={() => setCurrentModule(null)}\n        />\n      ) : currentModule === 'operationHead' ? (\n        <OperationHeadPanel\n          jobData={operationHeadData}\n          currentUser={user?.email}\n          systemsWork={systemsToOperationHead}\n          onSubmitToSystems={handleSubmitToSystems}\n          onSurveyUpload={handleSurveyUpload}\n          onBack={() => setCurrentModule(null)}\n        />\n      ) : currentModule === 'supervisor' ? (\n        <Systems\n          currentUser={user?.email}\n          messages={systemMessages}\n          onBack={() => setCurrentModule(null)}\n          onSurveyUpload={handleSurveyUpload}\n          onSendWorkslipToOperationHead={handleSendWorkslipToOperationHead}\n          onForwardToAccounts={handleForwardToAccounts}\n        />\n      ) : currentModule === 'accounts' ? (\n        <Accounts\n          accountData={accountsData}\n          onBack={() => setCurrentModule(null)}\n          onApproveStatus={handleApprovalUpdate}\n        />\n      ) : (\n        <Dashboard onSelect={setCurrentModule} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}