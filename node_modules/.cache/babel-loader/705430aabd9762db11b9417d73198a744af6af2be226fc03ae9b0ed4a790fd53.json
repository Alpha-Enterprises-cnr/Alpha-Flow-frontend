{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Folder\\\\my-app\\\\client\\\\src\\\\OperationHeadPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Typography, Button, Card, CardContent, Stack } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OperationHeadPanel({\n  jobData,\n  currentUser,\n  onBack,\n  onSubmitToSystems,\n  systemsWork = []\n}) {\n  _s();\n  const [drawingFiles, setDrawingFiles] = useState({});\n  const [surveyImages, setSurveyImages] = useState({});\n  const [breakupImages, setBreakupImages] = useState({});\n  const [excelFiles, setExcelFiles] = useState({});\n  const isOperationHead = (currentUser === null || currentUser === void 0 ? void 0 : currentUser.trim().toLowerCase()) === 'operationhead@gmail.com';\n  const forwardedJobs = Object.values(jobData.filter(entry => entry.worknumber).reduce((acc, entry) => {\n    acc[entry.worknumber] = entry;\n    return acc;\n  }, {}));\n\n  // ✅ Exclude work cards that are already submitted to Systems\n  const submittedWorknumbers = systemsWork.map(e => e.worknumber);\n  const allJobs = forwardedJobs.filter(job => !submittedWorknumbers.includes(job.worknumber));\n  const getCardColor = priority => {\n    if (priority === 'High') return 'linear-gradient(to right, rgb(176, 170, 110), #fbc02d)';\n    if (priority === 'Medium') return 'linear-gradient(to right, #aed581, #7cb342)';\n    return 'linear-gradient(to right, #66bb6a, #2e7d32)';\n  };\n  const handleSubmitAll = async entry => {\n    const worknumber = entry.worknumber;\n    const uploadedFiles = [];\n    const drawing = drawingFiles[worknumber];\n    if (drawing) {\n      const formData = new FormData();\n      formData.append('file', drawing);\n      const res = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await res.json();\n      uploadedFiles.push({\n        name: result.filename,\n        url: result.url\n      });\n    }\n    for (const img of surveyImages[worknumber] || []) {\n      const formData = new FormData();\n      formData.append('file', img);\n      const res = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await res.json();\n      uploadedFiles.push({\n        name: result.filename,\n        url: result.url\n      });\n    }\n    const excelFile = excelFiles[worknumber];\n    if (excelFile) {\n      const formData = new FormData();\n      formData.append('file', excelFile);\n      const res = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await res.json();\n      uploadedFiles.push({\n        name: result.filename,\n        url: result.url\n      });\n    }\n    if (onSubmitToSystems) {\n      onSubmitToSystems({\n        ...entry,\n        files: uploadedFiles,\n        priority: entry.priority\n      });\n    }\n    setDrawingFiles(prev => ({\n      ...prev,\n      [worknumber]: null\n    }));\n    setSurveyImages(prev => ({\n      ...prev,\n      [worknumber]: []\n    }));\n    setExcelFiles(prev => ({\n      ...prev,\n      [worknumber]: null\n    }));\n  };\n  if (!isOperationHead) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2rem',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"error\",\n        children: \"Access Denied: You are not authorized to access this panel.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onBack,\n        variant: \"outlined\",\n        style: {\n          marginTop: '1rem'\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      maxWidth: '900px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Operation Head Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      children: allJobs.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No new work items to process.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this) : allJobs.map((entry, idx) => {\n        var _surveyImages$worknum;\n        const worknumber = entry.worknumber;\n        const drawingUploaded = !!drawingFiles[worknumber];\n        const surveyUploaded = (((_surveyImages$worknum = surveyImages[worknumber]) === null || _surveyImages$worknum === void 0 ? void 0 : _surveyImages$worknum.length) || 0) > 0;\n        const breakupUploaded = !!breakupImages[worknumber];\n        const excelUploaded = !!excelFiles[worknumber];\n        const canSubmit = drawingUploaded && surveyUploaded && (breakupUploaded || excelUploaded);\n        return /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            background: getCardColor(entry.priority),\n            color: 'black',\n            borderRadius: '10px',\n            boxShadow: '0px 4px 12px rgba(0,0,0,0.2)'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Work Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 31\n              }, this), \" \", worknumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Filled by:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 31\n              }, this), \" \", entry.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Site Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 31\n              }, this), \" \", entry.sitename]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Nature of Work:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 31\n              }, this), \" \", entry.natureofwork]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Priority:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 31\n              }, this), \" \", entry.priority]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Remarks:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 31\n              }, this), \" \", entry.remarks]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"\\uD83D\\uDCC4 Upload Drawing File (Required)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".pdf,.doc,.docx,.xlsx,.csv\",\n                onChange: e => setDrawingFiles(prev => ({\n                  ...prev,\n                  [worknumber]: e.target.files[0]\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"\\uD83D\\uDCF7 Upload Site Survey Images (Required, Max 10)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".png,.jpg,.jpeg\",\n                multiple: true,\n                onChange: e => {\n                  const selected = Array.from(e.target.files);\n                  if (selected.length > 10) {\n                    alert('❌ Max 10 images only');\n                    return;\n                  }\n                  setSurveyImages(prev => ({\n                    ...prev,\n                    [worknumber]: selected\n                  }));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"\\uD83D\\uDDBC\\uFE0F Upload Break-up Sheet Image (.jpg/.png)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".jpg,.png\",\n                onChange: e => setBreakupImages(prev => ({\n                  ...prev,\n                  [worknumber]: e.target.files[0]\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"\\uD83D\\uDCE5 Download Blank Breakup Sheet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"secondary\",\n                onClick: () => window.open('http://localhost:5000/brsFiles/breakupsheet.xlsx', '_blank'),\n                children: \"\\uD83D\\uDCCA Download Excel Estimate Sheet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: \"\\uD83D\\uDCE4 Upload Filled Excel Estimate (.xlsx)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".xlsx\",\n                onChange: e => setExcelFiles(prev => ({\n                  ...prev,\n                  [worknumber]: e.target.files[0]\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this), canSubmit && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"success\",\n              size: \"small\",\n              style: {\n                marginTop: '1rem'\n              },\n              onClick: () => handleSubmitAll(entry),\n              children: \"\\uD83D\\uDE80 Submit to Systems\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), systemsWork.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '3rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"\\uD83D\\uDCE5 Files Received from Systems\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: systemsWork.map((entry, idx) => {\n          var _entry$workslips, _entry$drawings;\n          return /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              background: '#f5f5f5',\n              color: '#333',\n              borderRadius: '10px',\n              boxShadow: '0px 2px 6px rgba(0,0,0,0.1)'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Work Number:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 31\n                }, this), \" \", entry.worknumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), entry.estimate && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: \"\\uD83D\\uDCCA Estimate File\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  href: entry.estimate.url,\n                  download: entry.estimate.name,\n                  target: \"_blank\",\n                  children: entry.estimate.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this), ((_entry$workslips = entry.workslips) === null || _entry$workslips === void 0 ? void 0 : _entry$workslips.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: \"\\uD83D\\uDCC4 Workslips\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this), entry.workslips.map((file, i) => /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  href: file.url,\n                  download: file.name,\n                  target: \"_blank\",\n                  style: {\n                    margin: '0.2rem'\n                  },\n                  children: file.name\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this), ((_entry$drawings = entry.drawings) === null || _entry$drawings === void 0 ? void 0 : _entry$drawings.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '1rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: \"\\uD83D\\uDCD0 Drawings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 23\n                }, this), entry.drawings.map((file, i) => /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  href: file.url,\n                  download: file.name,\n                  target: \"_blank\",\n                  style: {\n                    margin: '0.2rem'\n                  },\n                  children: file.name\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onBack,\n      variant: \"outlined\",\n      style: {\n        marginTop: '2rem'\n      },\n      children: \"Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(OperationHeadPanel, \"SRB6fwP4Xt2y8h6OyDlX1bqc68s=\");\n_c = OperationHeadPanel;\nexport default OperationHeadPanel;\nvar _c;\n$RefreshReg$(_c, \"OperationHeadPanel\");","map":{"version":3,"names":["React","useState","Typography","Button","Card","CardContent","Stack","jsxDEV","_jsxDEV","OperationHeadPanel","jobData","currentUser","onBack","onSubmitToSystems","systemsWork","_s","drawingFiles","setDrawingFiles","surveyImages","setSurveyImages","breakupImages","setBreakupImages","excelFiles","setExcelFiles","isOperationHead","trim","toLowerCase","forwardedJobs","Object","values","filter","entry","worknumber","reduce","acc","submittedWorknumbers","map","e","allJobs","job","includes","getCardColor","priority","handleSubmitAll","uploadedFiles","drawing","formData","FormData","append","res","fetch","method","body","result","json","push","name","filename","url","img","excelFile","files","prev","style","padding","textAlign","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","maxWidth","margin","gutterBottom","spacing","length","idx","_surveyImages$worknum","drawingUploaded","surveyUploaded","breakupUploaded","excelUploaded","canSubmit","background","borderRadius","boxShadow","sitename","natureofwork","remarks","type","accept","onChange","target","multiple","selected","Array","from","alert","window","open","size","_entry$workslips","_entry$drawings","estimate","href","download","workslips","file","i","drawings","_c","$RefreshReg$"],"sources":["C:/React Folder/my-app/client/src/OperationHeadPanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  Stack,\n} from '@mui/material';\n\nfunction OperationHeadPanel({\n  jobData,\n  currentUser,\n  onBack,\n  onSubmitToSystems,\n  systemsWork = [],\n}) {\n  const [drawingFiles, setDrawingFiles] = useState({});\n  const [surveyImages, setSurveyImages] = useState({});\n  const [breakupImages, setBreakupImages] = useState({});\n  const [excelFiles, setExcelFiles] = useState({});\n\n  const isOperationHead = currentUser?.trim().toLowerCase() === 'operationhead@gmail.com';\n\n  const forwardedJobs = Object.values(\n    jobData\n      .filter((entry) => entry.worknumber)\n      .reduce((acc, entry) => {\n        acc[entry.worknumber] = entry;\n        return acc;\n      }, {})\n  );\n\n  // ✅ Exclude work cards that are already submitted to Systems\n  const submittedWorknumbers = systemsWork.map((e) => e.worknumber);\n  const allJobs = forwardedJobs.filter(\n    (job) => !submittedWorknumbers.includes(job.worknumber)\n  );\n\n  const getCardColor = (priority) => {\n    if (priority === 'High') return 'linear-gradient(to right, rgb(176, 170, 110), #fbc02d)';\n    if (priority === 'Medium') return 'linear-gradient(to right, #aed581, #7cb342)';\n    return 'linear-gradient(to right, #66bb6a, #2e7d32)';\n  };\n\n  const handleSubmitAll = async (entry) => {\n    const worknumber = entry.worknumber;\n    const uploadedFiles = [];\n\n    const drawing = drawingFiles[worknumber];\n    if (drawing) {\n      const formData = new FormData();\n      formData.append('file', drawing);\n      const res = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      const result = await res.json();\n      uploadedFiles.push({ name: result.filename, url: result.url });\n    }\n\n    for (const img of surveyImages[worknumber] || []) {\n      const formData = new FormData();\n      formData.append('file', img);\n      const res = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      const result = await res.json();\n      uploadedFiles.push({ name: result.filename, url: result.url });\n    }\n\n    const excelFile = excelFiles[worknumber];\n    if (excelFile) {\n      const formData = new FormData();\n      formData.append('file', excelFile);\n      const res = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      const result = await res.json();\n      uploadedFiles.push({ name: result.filename, url: result.url });\n    }\n\n    if (onSubmitToSystems) {\n      onSubmitToSystems({\n        ...entry,\n        files: uploadedFiles,\n        priority: entry.priority,\n      });\n    }\n\n    setDrawingFiles((prev) => ({ ...prev, [worknumber]: null }));\n    setSurveyImages((prev) => ({ ...prev, [worknumber]: [] }));\n    setExcelFiles((prev) => ({ ...prev, [worknumber]: null }));\n  };\n\n  if (!isOperationHead) {\n    return (\n      <div style={{ padding: '2rem', textAlign: 'center' }}>\n        <Typography variant=\"h6\" color=\"error\">\n          Access Denied: You are not authorized to access this panel.\n        </Typography>\n        <Button onClick={onBack} variant=\"outlined\" style={{ marginTop: '1rem' }}>\n          Back\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ padding: '2rem', maxWidth: '900px', margin: '0 auto' }}>\n      <Typography variant=\"h5\" gutterBottom>Operation Head Panel</Typography>\n\n      <Stack spacing={2}>\n        {allJobs.length === 0 ? (\n          <Typography>No new work items to process.</Typography>\n        ) : (\n          allJobs.map((entry, idx) => {\n            const worknumber = entry.worknumber;\n            const drawingUploaded = !!drawingFiles[worknumber];\n            const surveyUploaded = (surveyImages[worknumber]?.length || 0) > 0;\n            const breakupUploaded = !!breakupImages[worknumber];\n            const excelUploaded = !!excelFiles[worknumber];\n\n            const canSubmit =\n              drawingUploaded &&\n              surveyUploaded &&\n              (breakupUploaded || excelUploaded);\n\n            return (\n              <Card\n                key={idx}\n                style={{\n                  background: getCardColor(entry.priority),\n                  color: 'black',\n                  borderRadius: '10px',\n                  boxShadow: '0px 4px 12px rgba(0,0,0,0.2)',\n                }}\n              >\n                <CardContent>\n                  <Typography><strong>Work Number:</strong> {worknumber}</Typography>\n                  <Typography><strong>Filled by:</strong> {entry.name}</Typography>\n                  <Typography><strong>Site Name:</strong> {entry.sitename}</Typography>\n                  <Typography><strong>Nature of Work:</strong> {entry.natureofwork}</Typography>\n                  <Typography><strong>Priority:</strong> {entry.priority}</Typography>\n                  <Typography><strong>Remarks:</strong> {entry.remarks}</Typography>\n\n                  <div style={{ marginTop: '1rem' }}>\n                    <Typography variant=\"subtitle2\">📄 Upload Drawing File (Required)</Typography>\n                    <input\n                      type=\"file\"\n                      accept=\".pdf,.doc,.docx,.xlsx,.csv\"\n                      onChange={(e) =>\n                        setDrawingFiles((prev) => ({ ...prev, [worknumber]: e.target.files[0] }))\n                      }\n                    />\n                  </div>\n\n                  <div style={{ marginTop: '1rem' }}>\n                    <Typography variant=\"subtitle2\">📷 Upload Site Survey Images (Required, Max 10)</Typography>\n                    <input\n                      type=\"file\"\n                      accept=\".png,.jpg,.jpeg\"\n                      multiple\n                      onChange={(e) => {\n                        const selected = Array.from(e.target.files);\n                        if (selected.length > 10) {\n                          alert('❌ Max 10 images only');\n                          return;\n                        }\n                        setSurveyImages((prev) => ({ ...prev, [worknumber]: selected }));\n                      }}\n                    />\n                  </div>\n\n                  <div style={{ marginTop: '1rem' }}>\n                    <Typography variant=\"subtitle2\">🖼️ Upload Break-up Sheet Image (.jpg/.png)</Typography>\n                    <input\n                      type=\"file\"\n                      accept=\".jpg,.png\"\n                      onChange={(e) =>\n                        setBreakupImages((prev) => ({ ...prev, [worknumber]: e.target.files[0] }))\n                      }\n                    />\n                  </div>\n\n                  <div style={{ marginTop: '1rem' }}>\n                    <Typography variant=\"subtitle2\">📥 Download Blank Breakup Sheet</Typography>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      onClick={() =>\n                        window.open('http://localhost:5000/brsFiles/breakupsheet.xlsx', '_blank')\n                      }\n                    >\n                      📊 Download Excel Estimate Sheet\n                    </Button>\n                  </div>\n\n                  <div style={{ marginTop: '1rem' }}>\n                    <Typography variant=\"subtitle2\">📤 Upload Filled Excel Estimate (.xlsx)</Typography>\n                    <input\n                      type=\"file\"\n                      accept=\".xlsx\"\n                      onChange={(e) =>\n                        setExcelFiles((prev) => ({ ...prev, [worknumber]: e.target.files[0] }))\n                      }\n                    />\n                  </div>\n\n                  {canSubmit && (\n                    <Button\n                      variant=\"contained\"\n                      color=\"success\"\n                      size=\"small\"\n                      style={{ marginTop: '1rem' }}\n                      onClick={() => handleSubmitAll(entry)}\n                    >\n                      🚀 Submit to Systems\n                    </Button>\n                  )}\n                </CardContent>\n              </Card>\n            );\n          })\n        )}\n      </Stack>\n\n      {/* ✅ Section for viewing files from Systems */}\n      {systemsWork.length > 0 && (\n        <div style={{ marginTop: '3rem' }}>\n          <Typography variant=\"h6\" gutterBottom>\n            📥 Files Received from Systems\n          </Typography>\n\n          <Stack spacing={2}>\n            {systemsWork.map((entry, idx) => (\n              <Card\n                key={idx}\n                style={{\n                  background: '#f5f5f5',\n                  color: '#333',\n                  borderRadius: '10px',\n                  boxShadow: '0px 2px 6px rgba(0,0,0,0.1)',\n                }}\n              >\n                <CardContent>\n                  <Typography><strong>Work Number:</strong> {entry.worknumber}</Typography>\n\n                  {entry.estimate && (\n                    <div style={{ marginTop: '1rem' }}>\n                      <Typography variant=\"subtitle2\">📊 Estimate File</Typography>\n                      <Button\n                        variant=\"outlined\"\n                        href={entry.estimate.url}\n                        download={entry.estimate.name}\n                        target=\"_blank\"\n                      >\n                        {entry.estimate.name}\n                      </Button>\n                    </div>\n                  )}\n\n                  {entry.workslips?.length > 0 && (\n                    <div style={{ marginTop: '1rem' }}>\n                      <Typography variant=\"subtitle2\">📄 Workslips</Typography>\n                      {entry.workslips.map((file, i) => (\n                        <Button\n                          key={i}\n                          variant=\"outlined\"\n                          href={file.url}\n                          download={file.name}\n                          target=\"_blank\"\n                          style={{ margin: '0.2rem' }}\n                        >\n                          {file.name}\n                        </Button>\n                      ))}\n                    </div>\n                  )}\n\n                  {entry.drawings?.length > 0 && (\n                    <div style={{ marginTop: '1rem' }}>\n                      <Typography variant=\"subtitle2\">📐 Drawings</Typography>\n                      {entry.drawings.map((file, i) => (\n                        <Button\n                          key={i}\n                          variant=\"outlined\"\n                          href={file.url}\n                          download={file.name}\n                          target=\"_blank\"\n                          style={{ margin: '0.2rem' }}\n                        >\n                          {file.name}\n                        </Button>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            ))}\n          </Stack>\n        </div>\n      )}\n\n      <Button\n        onClick={onBack}\n        variant=\"outlined\"\n        style={{ marginTop: '2rem' }}\n      >\n        Back to Dashboard\n      </Button>\n    </div>\n  );\n}\n\nexport default OperationHeadPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}